// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(TrafficContext))]
    [Migration("20240517155156_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Traffic", b =>
                {
                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<int>("CaseCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LaneCount")
                        .HasColumnType("int");

                    b.Property<string>("Location0")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subsystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionID");

                    b.ToTable("Traffics");
                });

            modelBuilder.Entity("Domain.Entities.TrafficEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<int>("LaneId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionID");

                    b.ToTable("TrafficEvents");
                });

            modelBuilder.Entity("Domain.Entities.TrafficEvent", b =>
                {
                    b.HasOne("Domain.Entities.Traffic", "Traffic")
                        .WithMany("TrafficEvents")
                        .HasForeignKey("SessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Traffic");
                });

            modelBuilder.Entity("Domain.Entities.Traffic", b =>
                {
                    b.Navigation("TrafficEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
